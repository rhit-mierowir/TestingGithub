
name: quick test
run-name: testing pulling information from a toml file
on: push

jobs:
  extractinfo:
    runs-on: ubuntu-latest
    name: extract info from toml file form commit
    outputs:
      python_versions: ${{steps.get-vals.outputs.python_versions}}
    steps:
      - name: Checkout Committed Branch
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref_name}} #select committed branch
      
      - name: Install pipx
        run: |
          sudo apt update
          sudo apt install pipx
          pipx ensurepath 
          sudo pipx ensurepath

      - name: Install sphinx
        run : |
          pipx install poetry

      - name: Setup to collect variables
        run: |
          poetry install  --with gh_read_pyproject

      - id: get-vals
        run: |
          echo "Obtaining values from pyproject.toml script."
          echo "python_versions=$(poetry run python3 interpret_pyproject.py --python_versions --homepage)" >> "$GITHUB_OUTPUT"
          echo $GITHUB_OUTPUT

  use-info:
    runs-on: ubuntu-latest
    name: use info in toml file
    needs: extractinfo
    strategy:
      matrix:
        multstr: ${{fromJson(needs.extractinfo.outputs.python_versions)["python_versions"]}}
    steps: 
      - run: |
          echo "I got ${{matrix.multstr}}"





# name: quick test
# run-name: ${{ github.actor }} is trying to test stuff.

# on: [push, pull_request, workflow_dispatch]

# env:
#     BRANCH_NAME: ${{ github.head_ref || github.ref_name}}
#     MAIN_BRANCH: 'main' # Have this specified in some other file.
#     SECONDARY_BRANCH: 'develop' # Have this specified in some other file.
#     IS_MAIN_SITE_BRANCH: ${{ toJson(github.env.BRANCH_NAME == github.env.MAIN_BRANCH)}}
#     IS_SECONDARY_SITE_BRANCH: ${{toJson(github.env.BRANCH_NAME == github.env.SECONDARY_BRANCH)}}
#     MUST_REGENERATE_SITE: ${$IS_MAIN_SITE_BRANCH || $IS_SECONDARY_SITE_BRANCH}

# permissions:
#   contents: write

# jobs:
#   docs:
#     runs-on: ubuntu-latest
#     env:
#         MUST_REGENERATE_SITE: ${{github.env.IS_MAIN_SITE_BRANCH || github.env.IS_SECONDARY_SITE_BRANCH}}
#     steps:
        
#         - run: |
#             echo ${{github.env.BRANCH_NAME}}
#             echo "Is Push ${{github.event_name == 'push'}}"
#             echo "main ${{format('{0}',github.env.MAIN_BRANCH)}}"
#             echo "secondary $SECONDARY_BRANCH"
#             echo "is main $IS_MAIN_SITE_BRANCH"
#             echo "is seccondary ${{github.env.BRANCH_NAME == github.env.SECONDARY_BRANCH}}"
#             echo "is must regenerate $MUST_REGENERATE_SITE"

